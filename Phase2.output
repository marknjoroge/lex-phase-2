Terminals unused in grammar

   COMMA
   ERROR
   LT
   LE
   GT
   GE
   OR
   NOT


Grammar

    0 $accept: Start_Program $end

    1 Start_Program: START statements END

    2 statements: statements statement
    3           | statement

    4 statement: Dec_stmt
    5          | assignment_stmt
    6          | print_stmt
    7          | read_stmt
    8          | condition_stmt
    9          | while_stmt

   10 Dec_stmt: Type ID

   11 Type: INT
   12     | FLOAT
   13     | BOOLEAN

   14 assignment_stmt: ID ASG bexpression

   15 bexpression: bexpression AND expression
   16            | expression

   17 expression: exp EQ exp
   18           | exp NE exp
   19           | exp

   20 exp: exp PLUS exp
   21    | exp TIMES exp
   22    | factor

   23 factor: LPAREN exp RPAREN
   24       | INT_LITERAL
   25       | FLOAT_LITERAL
   26       | TRUE
   27       | FALSE
   28       | ID

   29 print_stmt: PRINT LPAREN ID RPAREN
   30           | PRINT LPAREN STRING_LITERAL RPAREN

   31 condition_stmt: if_head statements CL ENDE
   32               | if_head statements CL ENDE ELSE OP statements CL ENDE

   33 if_head: IF LPAREN bexpression RPAREN OP

   34 while_stmt: WHILE LPAREN bexpression RPAREN OP statements CL

   35 read_stmt: ID ASG READ LPAREN RPAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
START (258) 1
LPAREN (259) 23 29 30 33 34 35
RPAREN (260) 23 29 30 33 34 35
OP (261) 32 33 34
CL (262) 31 32 34
END (263) 1
COMMA (264)
ENDE (265) 31 32
INT_LITERAL (266) 24
FLOAT_LITERAL (267) 25
STRING_LITERAL (268) 30
TRUE (269) 26
FALSE (270) 27
ERROR (271)
IF (272) 33
ELSE (273) 32
READ (274) 35
PRINT (275) 29 30
WHILE (276) 34
TIMES (277) 21
PLUS (278) 20
ASG (279) 14 35
EQ (280) 17
NE (281) 18
LT (282)
LE (283)
GT (284)
GE (285)
AND (286) 15
OR (287)
NOT (288)
ID (289) 10 14 28 29 35
INT (290) 11
FLOAT (291) 12
BOOLEAN (292) 13


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
Start_Program (39)
    on left: 1, on right: 0
statements (40)
    on left: 2 3, on right: 1 2 31 32 34
statement (41)
    on left: 4 5 6 7 8 9, on right: 2 3
Dec_stmt (42)
    on left: 10, on right: 4
Type (43)
    on left: 11 12 13, on right: 10
assignment_stmt (44)
    on left: 14, on right: 5
bexpression (45)
    on left: 15 16, on right: 14 15 33 34
expression (46)
    on left: 17 18 19, on right: 15 16
exp (47)
    on left: 20 21 22, on right: 17 18 19 20 21 23
factor (48)
    on left: 23 24 25 26 27 28, on right: 22
print_stmt (49)
    on left: 29 30, on right: 6
condition_stmt (50)
    on left: 31 32, on right: 8
if_head (51)
    on left: 33, on right: 31 32
while_stmt (52)
    on left: 34, on right: 9
read_stmt (53)
    on left: 35, on right: 7


state 0

    0 $accept: . Start_Program $end

    START  shift, and go to state 1

    Start_Program  go to state 2


state 1

    1 Start_Program: START . statements END

    IF       shift, and go to state 3
    PRINT    shift, and go to state 4
    WHILE    shift, and go to state 5
    ID       shift, and go to state 6
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    statements       go to state 10
    statement        go to state 11
    Dec_stmt         go to state 12
    Type             go to state 13
    assignment_stmt  go to state 14
    print_stmt       go to state 15
    condition_stmt   go to state 16
    if_head          go to state 17
    while_stmt       go to state 18
    read_stmt        go to state 19


state 2

    0 $accept: Start_Program . $end

    $end  shift, and go to state 20


state 3

   33 if_head: IF . LPAREN bexpression RPAREN OP

    LPAREN  shift, and go to state 21


state 4

   29 print_stmt: PRINT . LPAREN ID RPAREN
   30           | PRINT . LPAREN STRING_LITERAL RPAREN

    LPAREN  shift, and go to state 22


state 5

   34 while_stmt: WHILE . LPAREN bexpression RPAREN OP statements CL

    LPAREN  shift, and go to state 23


state 6

   14 assignment_stmt: ID . ASG bexpression
   35 read_stmt: ID . ASG READ LPAREN RPAREN

    ASG  shift, and go to state 24


state 7

   11 Type: INT .

    $default  reduce using rule 11 (Type)


state 8

   12 Type: FLOAT .

    $default  reduce using rule 12 (Type)


state 9

   13 Type: BOOLEAN .

    $default  reduce using rule 13 (Type)


state 10

    1 Start_Program: START statements . END
    2 statements: statements . statement

    END      shift, and go to state 25
    IF       shift, and go to state 3
    PRINT    shift, and go to state 4
    WHILE    shift, and go to state 5
    ID       shift, and go to state 6
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    statement        go to state 26
    Dec_stmt         go to state 12
    Type             go to state 13
    assignment_stmt  go to state 14
    print_stmt       go to state 15
    condition_stmt   go to state 16
    if_head          go to state 17
    while_stmt       go to state 18
    read_stmt        go to state 19


state 11

    3 statements: statement .

    $default  reduce using rule 3 (statements)


state 12

    4 statement: Dec_stmt .

    $default  reduce using rule 4 (statement)


state 13

   10 Dec_stmt: Type . ID

    ID  shift, and go to state 27


state 14

    5 statement: assignment_stmt .

    $default  reduce using rule 5 (statement)


state 15

    6 statement: print_stmt .

    $default  reduce using rule 6 (statement)


state 16

    8 statement: condition_stmt .

    $default  reduce using rule 8 (statement)


state 17

   31 condition_stmt: if_head . statements CL ENDE
   32               | if_head . statements CL ENDE ELSE OP statements CL ENDE

    IF       shift, and go to state 3
    PRINT    shift, and go to state 4
    WHILE    shift, and go to state 5
    ID       shift, and go to state 6
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    statements       go to state 28
    statement        go to state 11
    Dec_stmt         go to state 12
    Type             go to state 13
    assignment_stmt  go to state 14
    print_stmt       go to state 15
    condition_stmt   go to state 16
    if_head          go to state 17
    while_stmt       go to state 18
    read_stmt        go to state 19


state 18

    9 statement: while_stmt .

    $default  reduce using rule 9 (statement)


state 19

    7 statement: read_stmt .

    $default  reduce using rule 7 (statement)


state 20

    0 $accept: Start_Program $end .

    $default  accept


state 21

   33 if_head: IF LPAREN . bexpression RPAREN OP

    LPAREN         shift, and go to state 29
    INT_LITERAL    shift, and go to state 30
    FLOAT_LITERAL  shift, and go to state 31
    TRUE           shift, and go to state 32
    FALSE          shift, and go to state 33
    ID             shift, and go to state 34

    bexpression  go to state 35
    expression   go to state 36
    exp          go to state 37
    factor       go to state 38


state 22

   29 print_stmt: PRINT LPAREN . ID RPAREN
   30           | PRINT LPAREN . STRING_LITERAL RPAREN

    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40


state 23

   34 while_stmt: WHILE LPAREN . bexpression RPAREN OP statements CL

    LPAREN         shift, and go to state 29
    INT_LITERAL    shift, and go to state 30
    FLOAT_LITERAL  shift, and go to state 31
    TRUE           shift, and go to state 32
    FALSE          shift, and go to state 33
    ID             shift, and go to state 34

    bexpression  go to state 41
    expression   go to state 36
    exp          go to state 37
    factor       go to state 38


state 24

   14 assignment_stmt: ID ASG . bexpression
   35 read_stmt: ID ASG . READ LPAREN RPAREN

    LPAREN         shift, and go to state 29
    INT_LITERAL    shift, and go to state 30
    FLOAT_LITERAL  shift, and go to state 31
    TRUE           shift, and go to state 32
    FALSE          shift, and go to state 33
    READ           shift, and go to state 42
    ID             shift, and go to state 34

    bexpression  go to state 43
    expression   go to state 36
    exp          go to state 37
    factor       go to state 38


state 25

    1 Start_Program: START statements END .

    $default  reduce using rule 1 (Start_Program)


state 26

    2 statements: statements statement .

    $default  reduce using rule 2 (statements)


state 27

   10 Dec_stmt: Type ID .

    $default  reduce using rule 10 (Dec_stmt)


state 28

    2 statements: statements . statement
   31 condition_stmt: if_head statements . CL ENDE
   32               | if_head statements . CL ENDE ELSE OP statements CL ENDE

    CL       shift, and go to state 44
    IF       shift, and go to state 3
    PRINT    shift, and go to state 4
    WHILE    shift, and go to state 5
    ID       shift, and go to state 6
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    statement        go to state 26
    Dec_stmt         go to state 12
    Type             go to state 13
    assignment_stmt  go to state 14
    print_stmt       go to state 15
    condition_stmt   go to state 16
    if_head          go to state 17
    while_stmt       go to state 18
    read_stmt        go to state 19


state 29

   23 factor: LPAREN . exp RPAREN

    LPAREN         shift, and go to state 29
    INT_LITERAL    shift, and go to state 30
    FLOAT_LITERAL  shift, and go to state 31
    TRUE           shift, and go to state 32
    FALSE          shift, and go to state 33
    ID             shift, and go to state 34

    exp     go to state 45
    factor  go to state 38


state 30

   24 factor: INT_LITERAL .

    $default  reduce using rule 24 (factor)


state 31

   25 factor: FLOAT_LITERAL .

    $default  reduce using rule 25 (factor)


state 32

   26 factor: TRUE .

    $default  reduce using rule 26 (factor)


state 33

   27 factor: FALSE .

    $default  reduce using rule 27 (factor)


state 34

   28 factor: ID .

    $default  reduce using rule 28 (factor)


state 35

   15 bexpression: bexpression . AND expression
   33 if_head: IF LPAREN bexpression . RPAREN OP

    RPAREN  shift, and go to state 46
    AND     shift, and go to state 47


state 36

   16 bexpression: expression .

    $default  reduce using rule 16 (bexpression)


state 37

   17 expression: exp . EQ exp
   18           | exp . NE exp
   19           | exp .
   20 exp: exp . PLUS exp
   21    | exp . TIMES exp

    TIMES  shift, and go to state 48
    PLUS   shift, and go to state 49
    EQ     shift, and go to state 50
    NE     shift, and go to state 51

    $default  reduce using rule 19 (expression)


state 38

   22 exp: factor .

    $default  reduce using rule 22 (exp)


state 39

   30 print_stmt: PRINT LPAREN STRING_LITERAL . RPAREN

    RPAREN  shift, and go to state 52


state 40

   29 print_stmt: PRINT LPAREN ID . RPAREN

    RPAREN  shift, and go to state 53


state 41

   15 bexpression: bexpression . AND expression
   34 while_stmt: WHILE LPAREN bexpression . RPAREN OP statements CL

    RPAREN  shift, and go to state 54
    AND     shift, and go to state 47


state 42

   35 read_stmt: ID ASG READ . LPAREN RPAREN

    LPAREN  shift, and go to state 55


state 43

   14 assignment_stmt: ID ASG bexpression .
   15 bexpression: bexpression . AND expression

    AND  shift, and go to state 47

    $default  reduce using rule 14 (assignment_stmt)


state 44

   31 condition_stmt: if_head statements CL . ENDE
   32               | if_head statements CL . ENDE ELSE OP statements CL ENDE

    ENDE  shift, and go to state 56


state 45

   20 exp: exp . PLUS exp
   21    | exp . TIMES exp
   23 factor: LPAREN exp . RPAREN

    RPAREN  shift, and go to state 57
    TIMES   shift, and go to state 48
    PLUS    shift, and go to state 49


state 46

   33 if_head: IF LPAREN bexpression RPAREN . OP

    OP  shift, and go to state 58


state 47

   15 bexpression: bexpression AND . expression

    LPAREN         shift, and go to state 29
    INT_LITERAL    shift, and go to state 30
    FLOAT_LITERAL  shift, and go to state 31
    TRUE           shift, and go to state 32
    FALSE          shift, and go to state 33
    ID             shift, and go to state 34

    expression  go to state 59
    exp         go to state 37
    factor      go to state 38


state 48

   21 exp: exp TIMES . exp

    LPAREN         shift, and go to state 29
    INT_LITERAL    shift, and go to state 30
    FLOAT_LITERAL  shift, and go to state 31
    TRUE           shift, and go to state 32
    FALSE          shift, and go to state 33
    ID             shift, and go to state 34

    exp     go to state 60
    factor  go to state 38


state 49

   20 exp: exp PLUS . exp

    LPAREN         shift, and go to state 29
    INT_LITERAL    shift, and go to state 30
    FLOAT_LITERAL  shift, and go to state 31
    TRUE           shift, and go to state 32
    FALSE          shift, and go to state 33
    ID             shift, and go to state 34

    exp     go to state 61
    factor  go to state 38


state 50

   17 expression: exp EQ . exp

    LPAREN         shift, and go to state 29
    INT_LITERAL    shift, and go to state 30
    FLOAT_LITERAL  shift, and go to state 31
    TRUE           shift, and go to state 32
    FALSE          shift, and go to state 33
    ID             shift, and go to state 34

    exp     go to state 62
    factor  go to state 38


state 51

   18 expression: exp NE . exp

    LPAREN         shift, and go to state 29
    INT_LITERAL    shift, and go to state 30
    FLOAT_LITERAL  shift, and go to state 31
    TRUE           shift, and go to state 32
    FALSE          shift, and go to state 33
    ID             shift, and go to state 34

    exp     go to state 63
    factor  go to state 38


state 52

   30 print_stmt: PRINT LPAREN STRING_LITERAL RPAREN .

    $default  reduce using rule 30 (print_stmt)


state 53

   29 print_stmt: PRINT LPAREN ID RPAREN .

    $default  reduce using rule 29 (print_stmt)


state 54

   34 while_stmt: WHILE LPAREN bexpression RPAREN . OP statements CL

    OP  shift, and go to state 64


state 55

   35 read_stmt: ID ASG READ LPAREN . RPAREN

    RPAREN  shift, and go to state 65


state 56

   31 condition_stmt: if_head statements CL ENDE .
   32               | if_head statements CL ENDE . ELSE OP statements CL ENDE

    ELSE  shift, and go to state 66

    $default  reduce using rule 31 (condition_stmt)


state 57

   23 factor: LPAREN exp RPAREN .

    $default  reduce using rule 23 (factor)


state 58

   33 if_head: IF LPAREN bexpression RPAREN OP .

    $default  reduce using rule 33 (if_head)


state 59

   15 bexpression: bexpression AND expression .

    $default  reduce using rule 15 (bexpression)


state 60

   20 exp: exp . PLUS exp
   21    | exp . TIMES exp
   21    | exp TIMES exp .

    $default  reduce using rule 21 (exp)


state 61

   20 exp: exp . PLUS exp
   20    | exp PLUS exp .
   21    | exp . TIMES exp

    TIMES  shift, and go to state 48

    $default  reduce using rule 20 (exp)


state 62

   17 expression: exp EQ exp .
   20 exp: exp . PLUS exp
   21    | exp . TIMES exp

    TIMES  shift, and go to state 48
    PLUS   shift, and go to state 49

    $default  reduce using rule 17 (expression)


state 63

   18 expression: exp NE exp .
   20 exp: exp . PLUS exp
   21    | exp . TIMES exp

    TIMES  shift, and go to state 48
    PLUS   shift, and go to state 49

    $default  reduce using rule 18 (expression)


state 64

   34 while_stmt: WHILE LPAREN bexpression RPAREN OP . statements CL

    IF       shift, and go to state 3
    PRINT    shift, and go to state 4
    WHILE    shift, and go to state 5
    ID       shift, and go to state 6
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    statements       go to state 67
    statement        go to state 11
    Dec_stmt         go to state 12
    Type             go to state 13
    assignment_stmt  go to state 14
    print_stmt       go to state 15
    condition_stmt   go to state 16
    if_head          go to state 17
    while_stmt       go to state 18
    read_stmt        go to state 19


state 65

   35 read_stmt: ID ASG READ LPAREN RPAREN .

    $default  reduce using rule 35 (read_stmt)


state 66

   32 condition_stmt: if_head statements CL ENDE ELSE . OP statements CL ENDE

    OP  shift, and go to state 68


state 67

    2 statements: statements . statement
   34 while_stmt: WHILE LPAREN bexpression RPAREN OP statements . CL

    CL       shift, and go to state 69
    IF       shift, and go to state 3
    PRINT    shift, and go to state 4
    WHILE    shift, and go to state 5
    ID       shift, and go to state 6
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    statement        go to state 26
    Dec_stmt         go to state 12
    Type             go to state 13
    assignment_stmt  go to state 14
    print_stmt       go to state 15
    condition_stmt   go to state 16
    if_head          go to state 17
    while_stmt       go to state 18
    read_stmt        go to state 19


state 68

   32 condition_stmt: if_head statements CL ENDE ELSE OP . statements CL ENDE

    IF       shift, and go to state 3
    PRINT    shift, and go to state 4
    WHILE    shift, and go to state 5
    ID       shift, and go to state 6
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    statements       go to state 70
    statement        go to state 11
    Dec_stmt         go to state 12
    Type             go to state 13
    assignment_stmt  go to state 14
    print_stmt       go to state 15
    condition_stmt   go to state 16
    if_head          go to state 17
    while_stmt       go to state 18
    read_stmt        go to state 19


state 69

   34 while_stmt: WHILE LPAREN bexpression RPAREN OP statements CL .

    $default  reduce using rule 34 (while_stmt)


state 70

    2 statements: statements . statement
   32 condition_stmt: if_head statements CL ENDE ELSE OP statements . CL ENDE

    CL       shift, and go to state 71
    IF       shift, and go to state 3
    PRINT    shift, and go to state 4
    WHILE    shift, and go to state 5
    ID       shift, and go to state 6
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    statement        go to state 26
    Dec_stmt         go to state 12
    Type             go to state 13
    assignment_stmt  go to state 14
    print_stmt       go to state 15
    condition_stmt   go to state 16
    if_head          go to state 17
    while_stmt       go to state 18
    read_stmt        go to state 19


state 71

   32 condition_stmt: if_head statements CL ENDE ELSE OP statements CL . ENDE

    ENDE  shift, and go to state 72


state 72

   32 condition_stmt: if_head statements CL ENDE ELSE OP statements CL ENDE .

    $default  reduce using rule 32 (condition_stmt)
